---

# Note this is a used in an iterable and requires the <item.value.interface> variable
#   The container interface variable is a a default object that assume the
#   Ansible iterator type is `with_dict`.
lxc_container_interface: |
  ### start generated network for [ {{ item.value.interface }} ] ###
  DEVICE={{ item.value.interface }}
  BOOTPROTO=none
  ONBOOT=yes
  NM_CONTROLLED=no
  TYPE=Ethernet
  {% if item.value.address is defined %}
  IPADDR={{ item.value.address }}
  NETMASK={{ item.value.netmask }}
  {% if item.value.gateway is defined %}
  GATEWAY={{ item.value.gateway }}
  {% endif %}
  {% endif %}
  MTU={{ item.value.mtu|default(lxc_container_default_mtu) }}
  DELAY=0
  ### end generated network for [ {{ item.value.interface }} ] ###

# Default interface file
lxc_container_default_interfaces: |
  DEVICE=eth0
  BOOTPROTO=dhcp
  ONBOOT=yes
  NM_CONTROLLED=no
  TYPE=Ethernet

lxc_container_default_route_interfaces:
  route_file: "/etc/sysconfig/network-scripts/route-{{ item.value.interface }}"
  route_setup: |
    {% for route in item.value.static_routes %}
        {{ route['cidr'] }} via {{ route['gateway'] }} dev {{ item.value.interface }}
    {% endfor %}

# Note this is a used in an iterable and requires the <item.value.interface> variable
lxc_container_interface_target: "/etc/sysconfig/network-scripts/ifcfg-{{ item.value.interface }}"

lxc_container_map:
  distro: centos
  arch: amd64
  release: 7
  prep_commands: |
    mkdir -p /var/backup
    rm /etc/resolv.conf
    {% for resolver in lxc_cache_resolvers %}
    echo "{{ resolver }}" | tee -a /etc/resolv.conf
    {% endfor %}
    if [ -f  "/usr/lib/systemd/system/poweroff.target" ];then
      ln -sf /usr/lib/systemd/system/poweroff.target /etc/systemd/system/sigpwr.target || true
    fi
    ln -s /dev/null /etc/systemd/system/systemd-udevd.service || true
    ln -s /dev/null /etc/systemd/system/systemd-udevd-control.socket || true
    ln -s /dev/null /etc/systemd/system/systemd-udevd-kernel.socket || true
    ln -s /dev/null /etc/systemd/system/proc-sys-fs-binfmt_misc.automount || true
    echo -e '{{ lxc_container_default_interfaces }}' | tee /etc/sysconfig/network-scripts/ifcfg-eth0
    chage -I -1 -d -1 -m 0 -M 99999 -E -1 root
