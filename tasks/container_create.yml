---
# Copyright 2014, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Check for lxc volume group
  shell: "(which vgs > /dev/null && vgs | grep -o '{{ lxc_container_vg_name }}') || false"
  register: vg_result
  failed_when: false
  changed_when: vg_result.rc != 0
  delegate_to: "{{ physical_host }}"
  tags:
    - lxc-container-vg-detect

- name: Set container backend "dir" if "lvm" not found
  set_fact:
     lxc_container_backing_store: dir
  when: vg_result.rc != 0
  tags:
    - lxc-container-vg-detect

- name: Container service directories
  file:
    path: "{{ item }}"
    state: "directory"
  with_items:
    - "/openstack/{{ inventory_hostname }}"
    - "/openstack/backup/{{ inventory_hostname }}"
    - "/openstack/log/{{ inventory_hostname }}"
    - "{{ lxc_container_directory }}/{{ inventory_hostname }}"
  delegate_to: "{{ physical_host }}"
  tags:
    - lxc-container-directories

- name: LXC autodev setup
  template:
    src: "autodev.j2"
    dest: "/var/lib/lxc/{{ inventory_hostname }}/autodev"
    owner: "root"
    group: "root"
    mode: "0755"
  delegate_to: "{{ physical_host }}"
  tags:
    - lxc-container-autodev

- name: Create container
  lxc_container:
    name: "{{ inventory_hostname }}"
    container_log: "true"
    config: "{{ lxc_container_config }}"
    template: "{{ lxc_container_template }}"
    state: started
    backing_store: "{{ lxc_container_backing_store }}"
    directory: "{{ lxc_container_rootfs_directory }}"
    fs_size: "{{ lxc_container_fs_size }}"
    fs_type: "{{ lxc_container_fs_type }}"
    vg_name: "{{ lxc_container_vg_name }}"
    template_options: "{{ lxc_container_download_template_options }}"
    container_command: "{{ lxc_container_map.prep_commands }}"
    container_config:
      - "lxc.autodev=1"
      - "lxc.pts=1024"
      - "lxc.kmsg=0"
      - "lxc.hook.autodev=/var/lib/lxc/{{ inventory_hostname }}/autodev"
      - "lxc.mount.entry=/openstack/backup/{{ inventory_hostname }} var/backup none defaults,bind,rw 0 0"
  delegate_to: "{{ physical_host }}"
  tags:
    - lxc-container-create

- name: Container network interfaces
  lxc_container:
    name: "{{ inventory_hostname }}"
    container_command: |
      echo -e '{{ lxc_container_interface }}' | tee {{ lxc_container_interface_target }}
  with_dict: container_networks|default({})
  delegate_to: "{{ physical_host }}"
  tags:
    - lxc-container-networks

- name: Container network route interfaces
  lxc_container:
    name: "{{ inventory_hostname }}"
    container_command: |
      echo -e '{{ lxc_container_default_route_interfaces.route_setup }}' | tee {{ lxc_container_default_route_interfaces.route_file }}
  when: item.value.static_routes is defined
  with_dict: container_networks|default({})
  delegate_to: "{{ physical_host }}"
  tags:
    - lxc-container-networks

- name: LXC host config for container networks
  template:
    src: "container-interface.ini.j2"
    dest: "/var/lib/lxc/{{ inventory_hostname }}/{{ item.value.interface }}.ini"
    owner: "root"
    group: "root"
    mode: "0644"
  with_dict: container_networks|default({})
  notify:
    - Lxc container restart
  delegate_to: "{{ physical_host }}"
  tags:
    - lxc-container-networks

# NOTE(major): the lxc.network.veth.pair line must appear *immediately* after
# the lxc.network.name congfiguration line or it will be ignored.  That's why
# you'll find a "insertafter" in this YAML block.
- name: Add veth pair name to match container name
  lineinfile:
    dest: "/var/lib/lxc/{{ inventory_hostname }}/config"
    line: "lxc.network.veth.pair = {{ inventory_hostname[-8:].replace('-', '').replace('_', '') }}_eth0"
    insertafter: "^lxc.network.name"
    backup: "true"
  delegate_to: "{{ physical_host }}"
  tags:
    - lxc-container-networks

- name: Container network includes
  lineinfile:
    dest: "/var/lib/lxc/{{ inventory_hostname }}/config"
    line: "lxc.include = /var/lib/lxc/{{ inventory_hostname }}/{{ item.value.interface }}.ini"
    backup: "true"
  with_dict: container_networks|default({})
  when: >
    item.value.interface is defined
  notify:
    - Lxc container restart
  delegate_to: "{{ physical_host }}"
  tags:
    - lxc-container-networks

# Adds post-down and pre-start hooks
- name: Drop veth cleanup script
  template:
    src: "veth-cleanup.sh.j2"
    dest: "/var/lib/lxc/{{ inventory_hostname }}/veth-cleanup.sh"
    owner: "root"
    group: "root"
    mode: "0755"
  delegate_to: "{{ physical_host }}"
  tags:
    - lxc-container-networks

# This is being defined due to an issue with dangling veth pairs.
#  TODO(someone) This should be removed once an upstream patch has
#  been submitted to either the kernel or LXC to fix the veth issues.
#  Container restart is not happening here because it's not needed.
- name: Defines a pre and post hook script
  lineinfile:
    dest: "/var/lib/lxc/{{ inventory_hostname }}/config"
    line: "{{ item }}"
    backup: "true"
  with_items:
    - "lxc.hook.pre-start = /var/lib/lxc/{{ inventory_hostname }}/veth-cleanup.sh"
    - "lxc.hook.post-stop = /var/lib/lxc/{{ inventory_hostname }}/veth-cleanup.sh"
  delegate_to: "{{ physical_host }}"
  tags:
    - lxc-container-networks

# Flush the handlers to ensure the container and networking is online.
- meta: flush_handlers

- name: Wait for ssh to be available
  local_action:
    module: wait_for
    port: "{{ ansible_ssh_port | default('22') }}"
    host: "{{ ansible_ssh_host | default(inventory_hostname) }}"
    search_regex: OpenSSH
    delay: 1
  tags:
    - lxc-container-networks

- name: Install container proxy settings
  template:
    dest: "/etc/environment"
    src: "environment.j2"
    mode: "0644"
  remote_user: root
  tags:
    - lxc-container-proxy
